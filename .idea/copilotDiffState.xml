<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/com/eventApp/Controller/ViewParticipantController.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/com/eventApp/Controller/ViewParticipantController.java" />
              <option name="originalContent" value="package com.eventApp.Controller;&#10;&#10;import com.eventApp.DAO.EventDAO;&#10;import com.eventApp.Loader.FXMLScreenLoader;&#10;import com.eventApp.Model.Event;&#10;import com.eventApp.Model.Student;&#10;import com.eventApp.Model.User;&#10;import com.eventApp.Service.ClubService;&#10;import com.eventApp.Utils.CurrentUser;&#10;import javafx.collections.FXCollections;&#10;import javafx.collections.ObservableList;&#10;import javafx.event.ActionEvent;&#10;import javafx.fxml.FXML;&#10;import javafx.scene.control.ComboBox;&#10;import javafx.scene.control.TableColumn;&#10;import javafx.scene.control.TableView;&#10;import javafx.scene.layout.VBox;&#10;&#10;import java.sql.SQLException;&#10;import java.util.List;&#10;&#10;/**&#10; * Controller class for viewing event participants in the CampusConnect application.&#10; * &lt;p&gt;&#10; * This class manages the UI and logic for displaying a list of participants for selected events.&#10; * It interacts with the ClubService and EventDAO to fetch event and participant data from the database.&#10; * The controller is responsible for:&#10; * &lt;ul&gt;&#10; *   &lt;li&gt;Initializing the event selection ComboBox with available event names.&lt;/li&gt;&#10; *   &lt;li&gt;Loading and displaying participants for the selected event in a TableView.&lt;/li&gt;&#10; *   &lt;li&gt;Handling navigation actions, such as returning to the club dashboard.&lt;/li&gt;&#10; * &lt;/ul&gt;&#10; * &lt;p&gt;&#10; * Fields:&#10; * &lt;ul&gt;&#10; *   &lt;li&gt;TableColumn fields for displaying student details (name, user ID, department, semester).&lt;/li&gt;&#10; *   &lt;li&gt;TableView for showing the list of participants.&lt;/li&gt;&#10; *   &lt;li&gt;ComboBox for selecting events.&lt;/li&gt;&#10; *   &lt;li&gt;Service and DAO objects for business logic and database access.&lt;/li&gt;&#10; *   &lt;li&gt;Current user information for context-sensitive operations.&lt;/li&gt;&#10; * &lt;/ul&gt;&#10; * &lt;p&gt;&#10; * Methods:&#10; * &lt;ul&gt;&#10; *   &lt;li&gt;initialize(): Sets up the ComboBox and TableView, and loads event names.&lt;/li&gt;&#10; *   &lt;li&gt;loadEventNames(): Retrieves all event names from the service.&lt;/li&gt;&#10; *   &lt;li&gt;loadParticipantList(int eventId): Loads participants for a given event.&lt;/li&gt;&#10; *   &lt;li&gt;setupColumns(): Configures TableView columns for participant display.&lt;/li&gt;&#10; *   &lt;li&gt;onBack(ActionEvent): Handles navigation back to the club dashboard.&lt;/li&gt;&#10; * &lt;/ul&gt;&#10; *&#10; * This controller is typically associated with the ViewParticipants.fxml UI layout.&#10; */&#10;&#10;public class ViewParticipantController {&#10;&#10;    public TableColumn&lt;Student, String&gt; nameCol;&#10;    public TableColumn&lt;Student, String&gt; userIdCol;&#10;    public TableColumn&lt;Student, String&gt; deptCol;&#10;    public TableColumn&lt;Student, String&gt; semCol;&#10;    public TableView&lt;Student&gt; participantTable;&#10;    public VBox tablePane;&#10;    @FXML&#10;    private ComboBox&lt;String&gt; eventComboBox;&#10;&#10;    List&lt;Student&gt; participantList;&#10;    List&lt;String&gt; eventNames;&#10;    ClubService clubService = new ClubService();&#10;    EventDAO eventDAO = new EventDAO();&#10;    User currentUser= CurrentUser.getCurrentUser();&#10;    @FXML&#10;    public void initialize() {&#10;        participantTable.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY_ALL_COLUMNS);&#10;        loadEventNames();&#10;        eventComboBox.getItems().addAll(eventNames);&#10;&#10;        eventComboBox.setOnAction(event -&gt; {&#10;            String selectedEvent = (String) eventComboBox.getValue();&#10;            loadParticipantList(eventDAO.getEventIdBy(selectedEvent));&#10;            tablePane.setVisible(true);&#10;            setupColumns();&#10;        });&#10;    }&#10;&#10;    private void loadEventNames() {&#10;        eventNames = clubService.getAllEventNames();&#10;    }&#10;&#10;    private void loadParticipantList(int eventId) {&#10;        this.participantList = clubService.getParticipant(eventId);&#10;    }&#10;&#10;    private void setupColumns() {&#10;        nameCol.setCellValueFactory(cellData -&gt; new javafx.beans.property.SimpleStringProperty(cellData.getValue().getName()));&#10;        userIdCol.setCellValueFactory(cellData -&gt; new javafx.beans.property.SimpleStringProperty(cellData.getValue().getUserId()));&#10;        deptCol.setCellValueFactory(cellData -&gt; new javafx.beans.property.SimpleStringProperty(cellData.getValue().getDepartment()));&#10;        semCol.setCellValueFactory(cellData -&gt; new javafx.beans.property.SimpleStringProperty(String.valueOf(cellData.getValue().getSemester())));&#10;&#10;        participantTable.getItems().setAll(participantList);&#10;    }&#10;&#10;    public void onBack(ActionEvent actionEvent) { FXMLScreenLoader.openClubDashboard(actionEvent); }&#10;&#10;}&#10;" />
              <option name="updatedContent" value="package com.eventApp.Controller;&#10;&#10;import com.eventApp.DAO.EventDAO;&#10;import com.eventApp.Loader.FXMLScreenLoader;&#10;import com.eventApp.Model.Event;&#10;import com.eventApp.Model.Student;&#10;import com.eventApp.Model.User;&#10;import com.eventApp.Service.ClubService;&#10;import com.eventApp.Utils.CurrentUser;&#10;import javafx.collections.FXCollections;&#10;import javafx.collections.ObservableList;&#10;import javafx.event.ActionEvent;&#10;import javafx.fxml.FXML;&#10;import javafx.scene.control.ComboBox;&#10;import javafx.scene.control.TableColumn;&#10;import javafx.scene.control.TableView;&#10;import javafx.scene.layout.VBox;&#10;&#10;import java.sql.SQLException;&#10;import java.util.List;&#10;&#10;/**&#10; * Controller class for viewing event participants in the CampusConnect application.&#10; * &lt;p&gt;&#10; * This class manages the UI and logic for displaying a list of participants for selected events.&#10; * It interacts with the ClubService and EventDAO to fetch event and participant data from the database.&#10; * The controller is responsible for:&#10; * &lt;ul&gt;&#10; *   &lt;li&gt;Initializing the event selection ComboBox with available event names.&lt;/li&gt;&#10; *   &lt;li&gt;Loading and displaying participants for the selected event in a TableView.&lt;/li&gt;&#10; *   &lt;li&gt;Handling navigation actions, such as returning to the club dashboard.&lt;/li&gt;&#10; * &lt;/ul&gt;&#10; * &lt;p&gt;&#10; * Fields:&#10; * &lt;ul&gt;&#10; *   &lt;li&gt;TableColumn fields for displaying student details (name, user ID, department, semester).&lt;/li&gt;&#10; *   &lt;li&gt;TableView for showing the list of participants.&lt;/li&gt;&#10; *   &lt;li&gt;ComboBox for selecting events.&lt;/li&gt;&#10; *   &lt;li&gt;Service and DAO objects for business logic and database access.&lt;/li&gt;&#10; *   &lt;li&gt;Current user information for context-sensitive operations.&lt;/li&gt;&#10; * &lt;/ul&gt;&#10; * &lt;p&gt;&#10; * Methods:&#10; * &lt;ul&gt;&#10; *   &lt;li&gt;initialize(): Sets up the ComboBox and TableView, and loads event names.&lt;/li&gt;&#10; *   &lt;li&gt;loadEventNames(): Retrieves all event names from the service.&lt;/li&gt;&#10; *   &lt;li&gt;loadParticipantList(int eventId): Loads participants for a given event.&lt;/li&gt;&#10; *   &lt;li&gt;setupColumns(): Configures TableView columns for participant display.&lt;/li&gt;&#10; *   &lt;li&gt;onBack(ActionEvent): Handles navigation back to the club dashboard.&lt;/li&gt;&#10; * &lt;/ul&gt;&#10; *&#10; * This controller is typically associated with the ViewParticipants.fxml UI layout.&#10; */&#10;&#10;public class ViewParticipantController {&#10;&#10;    public TableColumn&lt;Student, String&gt; nameCol;&#10;    public TableColumn&lt;Student, String&gt; userIdCol;&#10;    public TableColumn&lt;Student, String&gt; deptCol;&#10;    public TableColumn&lt;Student, String&gt; semCol;&#10;    public TableView&lt;Student&gt; participantTable;&#10;    public VBox tablePane;&#10;    @FXML&#10;    private ComboBox&lt;String&gt; eventComboBox;&#10;&#10;    List&lt;Student&gt; participantList;&#10;    List&lt;String&gt; eventNames;&#10;    ClubService clubService = new ClubService();&#10;    EventDAO eventDAO = new EventDAO();&#10;    User currentUser= CurrentUser.getCurrentUser();&#10;    @FXML&#10;    public void initialize() {&#10;        participantTable.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY_ALL_COLUMNS);&#10;        loadEventNames();&#10;        eventComboBox.getItems().addAll(eventNames);&#10;&#10;        eventComboBox.setOnAction(event -&gt; {&#10;            String selectedEvent = (String) eventComboBox.getValue();&#10;            loadParticipantList(eventDAO.getEventIdBy(selectedEvent));&#10;            tablePane.setVisible(true);&#10;            setupColumns();&#10;        });&#10;    }&#10;&#10;    private void loadEventNames() {&#10;        eventNames = clubService.getAllEventNames();&#10;    }&#10;&#10;    private void loadParticipantList(int eventId) {&#10;        this.participantList = clubService.getParticipant(eventId);&#10;    }&#10;&#10;    private void setupColumns() {&#10;        nameCol.setCellValueFactory(cellData -&gt; new javafx.beans.property.SimpleStringProperty(cellData.getValue().getName()));&#10;        userIdCol.setCellValueFactory(cellData -&gt; new javafx.beans.property.SimpleStringProperty(cellData.getValue().getUserId()));&#10;        deptCol.setCellValueFactory(cellData -&gt; new javafx.beans.property.SimpleStringProperty(cellData.getValue().getDepartment()));&#10;        semCol.setCellValueFactory(cellData -&gt; new javafx.beans.property.SimpleStringProperty(String.valueOf(cellData.getValue().getSemester())));&#10;&#10;        participantTable.getItems().setAll(participantList);&#10;    }&#10;&#10;    public void onBack(ActionEvent actionEvent) { FXMLScreenLoader.openClubDashboard(actionEvent); }&#10;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>